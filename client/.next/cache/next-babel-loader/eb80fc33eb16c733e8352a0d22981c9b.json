{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oscar\\\\WebstormProjects\\\\MicroService\\\\ticketing\\\\client\\\\hooks\\\\use-request.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport { useState } from 'react';\nexport default (({\n  url,\n  method,\n  body\n}) => {\n  const {\n    0: errors,\n    1: setErrors\n  } = useState(null);\n\n  const doRequest = async () => {\n    try {\n      const response = await axios[method](url, body);\n      return response.data;\n    } catch (err) {\n      console.log(err);\n      setErrors(__jsx(\"div\", {\n        className: \"alert alert-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }\n      }, __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, \"Ooops....\"), __jsx(\"ul\", {\n        className: \"my-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, err.response.data.errors.map(err => __jsx(\"li\", {\n        key: err.message,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, err.message)))));\n    }\n  };\n\n  return {\n    doRequest,\n    errors\n  };\n});","map":{"version":3,"sources":["C:/Users/Oscar/WebstormProjects/MicroService/ticketing/client/hooks/use-request.js"],"names":["axios","useState","url","method","body","errors","setErrors","doRequest","response","data","err","console","log","map","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,gBAAe,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,MAAP;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AACxC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMM,SAAS,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACG,MAAD,CAAL,CAAcD,GAAd,EAAmBE,IAAnB,CAAvB;AACA,aAAOI,QAAQ,CAACC,IAAhB;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,MAAAA,SAAS,CACP;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,GAAG,CAACF,QAAJ,CAAaC,IAAb,CAAkBJ,MAAlB,CAAyBQ,GAAzB,CAA6BH,GAAG,IAC/B;AAAI,QAAA,GAAG,EAAEA,GAAG,CAACI,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBJ,GAAG,CAACI,OAA3B,CADD,CADH,CAFF,CADO,CAAT;AAUH;AACF,GAjBD;;AAmBA,SAAO;AAAEP,IAAAA,SAAF;AAAaF,IAAAA;AAAb,GAAP;AACD,CAvBD","sourcesContent":["import axios from 'axios';\r\nimport { useState } from 'react';\r\n\r\nexport default ({ url, method, body }) => {\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  const doRequest = async () => {\r\n    try {\r\n        const response = await axios[method](url, body);\r\n        return response.data;\r\n    } catch (err) {\r\n        console.log(err);\r\n        setErrors(\r\n          <div className=\"alert alert-danger\">\r\n            <h4>Ooops....</h4>\r\n            <ul className=\"my-0\">\r\n              {err.response.data.errors.map(err => (\r\n                <li key={err.message}>{err.message}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return { doRequest, errors };\r\n};"]},"metadata":{},"sourceType":"module"}